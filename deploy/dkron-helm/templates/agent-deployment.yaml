apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dkron.fullname" . }}-agent
  labels:
    {{- include "dkron.agentLabels" . | nindent 4 }}
  {{- with .Values.agent.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.agent.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dkron.agentSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.agent.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.image.pullPolicy "Always" }}
        uuid: {{ uuidv4 }}
      {{- end }}
      labels:
        {{- include "dkron.agentSelectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dkron.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.agent.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.agent.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/local/bin/dkron"]
          args:
              - "agent"
              - "--config=/etc/dkron/dkron.yaml"
              - "--tag=\"type=scrapfly\""
              - "--retry-join=\"provider=k8s label_selector=\"\"app.kubernetes.io/instance={{ .Release.Name }}\"\" namespace=\"\"{{ .Release.Namespace }}\"\"\""
              - "--log-level={{ .Values.agent.log.level }}"
              - "--tag=\"agent=true\""
          ports:
            -   name: serf
                containerPort: 8946
            -   name: grpc
                containerPort: 6868
          resources:
            {{- toYaml .Values.agent.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "dkron.fullname" . }}-envs
      {{- with .Values.agent.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
